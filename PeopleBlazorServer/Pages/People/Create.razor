@page "/People/Create"
@inject IPeopleData peopleData
@inject NavigationManager navigationManager

<h3>Create</h3>

<EditForm Model="person" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-group">
        <label>First Name</label>
        <InputText @bind-Value="person.FirstName" class="form-control"/>
        <ValidationMessage For="() => person.FirstName" class="text-danger"/>
    </div>
    <div class="form-group">
        <label>Last Name</label>
        <InputText @bind-Value="person.LastName" class="form-control"/>
        <ValidationMessage For="() => person.LastName"/>
    </div>
    <div class="form-group">
        <label>Date of birth</label>
        <InputDate @bind-Value="person.DateOfBirth" class="form-control"/>
        <ValidationMessage For="() => person.DateOfBirth"/>
    </div>
    <div class="form-group">
        <label>Is Active</label>
        <InputCheckbox @bind-Value="person.IsActive" class="form-control"/>
        <ValidationMessage For="() => person.IsActive"/>
    </div>
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary"/>
    </div>
</EditForm>

@code {
    private PersonModel person = new PersonModel();

    private async Task HandleValidSubmit()
    {
        int id = await peopleData.CreatePerson(person);
        person = new PersonModel();

        navigationManager.NavigateTo("/People/Display");
    }

}
